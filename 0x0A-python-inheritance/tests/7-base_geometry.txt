
The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

This is an example text file in reStructuredText format. First import
``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()

    >>> bg.integer_validator("height", 20)

    >>> bg.integer_validator("integer", 15)

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator("name", "Betty")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("size", 0)
    Traceback (most recent call last):
    ValueError: size must be greater than 0
    
    >>> bg.integer_validator("width", -2)
    Traceback (most recent call last):
    ValueError: width must be greater than 0

    >>> bg.integer_validator("test")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("width", False)
    Traceback (most recent call last):
    TypeError: width must be an integer

    >>> bg.integer_validator("height", None)
    Traceback (most recent call last):
    TypeError: height must be an integer

    >>> bg.integer_validator("height", (1,))
    Traceback (most recent call last):
    TypeError: height must be an integer

    >>> bg.integer_validator("size", 10.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> bg.integer_validator("width", [5])
    Traceback (most recent call last):
    TypeError: width must be an integer

    >>> bg.integer_validator(None, 2)

    >>> bg.integer_validator("test", {1, 0})
    Traceback (most recent call last):
    TypeError: test must be an integer
